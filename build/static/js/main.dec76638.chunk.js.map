{"version":3,"sources":["services/phonebook.js","components/filterSeacrch.js","components/newContact.js","components/contactList.js","components/notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","params","post","id","patch","delete","FilterSearch","state","onInput","event","str","target","value","strRegex","RegExp","result","persons","forEach","person","test","name","match","push","setSearchResults","NewContact","onBlur","setNewName","setNewNum","type","onClick","preventDefault","newName","setNotification","error","message","newNum","number","existing_contact","find","window","confirm","phonebook","setPersons","catch","err","ContactList","contacts","searchResults","length","map","style","marginLeft","color","contact","newList","filter","Notification","alert","alertRef","useRef","useEffect","setTimeout","current","display","ref","className","App","useState","notification","stateObj","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dec76638.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getContacts = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst saveContact = (params) => {\r\n    const request = axios.post(baseUrl, params)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updateContact = (id, params) => {\r\n  const request = axios.patch(`${baseUrl}/${id}`, params)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteContact = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request;\r\n}\r\n\r\nexport default {getContacts, saveContact, updateContact, deleteContact}","import React from 'react'\r\n\r\nconst FilterSearch = ({state}) => {\r\n    const searchContacts = (event) => {\r\n        let str = event.target.value;\r\n        let strRegex = new RegExp(str, 'gi')\r\n        let result = [];\r\n        state.persons.forEach(person => {\r\n          if(/[a-zA-Z]/.test(str) && person.name.match(strRegex) !== null){\r\n            result.push(person)\r\n          }\r\n        })\r\n        state.setSearchResults(result);\r\n      }\r\n\r\n      return(\r\n          <>\r\n            search: <input onInput={searchContacts}/>\r\n          </>\r\n      )\r\n}\r\n\r\nexport default FilterSearch","import React from 'react'\r\nimport phonebook from '../services/phonebook'\r\n\r\nconst NewContact = ({state}) => {\r\n\r\n    const getName = (event) => {\r\n        state.setNewName(event.target.value)\r\n  }\r\n      const getNum = (event) => {\r\n        state.setNewNum(event.target.value)\r\n  }\r\n\r\nconst validateContact = () =>{\r\n  if(state.newName === \"\"){\r\n    state.setNotification({error: true, message: 'supply a contact name'})\r\n    return true\r\n  }else if(state.newNum === \"\"){\r\n    state.setNotification({error: true, message: 'supply a phone number'}) \r\n    return true\r\n  }\r\n}\r\n      const addPerson = (event) => {\r\n        event.preventDefault()\r\n        if(validateContact()) return;\r\n        let params = {name: state.newName, number: state.newNum};\r\n        let existing_contact = state.persons.find(person => person.name === state.newName);\r\n        if(existing_contact){\r\n          let update = window.confirm(`${existing_contact.name} already exits, do you want to replace the number?`);\r\n          if(update){\r\n            phonebook.updateContact(existing_contact.id, params)\r\n           .then(response => {\r\n            state.setPersons([...state.persons, response]);\r\n            state.setNotification({error: false, message: `Updated ${existing_contact.name}`})\r\n           })\r\n           .catch((err) => {\r\n             return {error: true, message: err.message}\r\n           })\r\n          }\r\n        }else{\r\n          phonebook.saveContact({name: state.newName, number: state.newNum})\r\n          .then(response => {\r\n            state.setPersons([...state.persons, response]);\r\n            state.setNotification({error: false, message: `Added ${state.newName}`})\r\n           })\r\n          .catch(() => {\r\n            state.setNotification({error: true, message:`contact not saved`})\r\n           });\r\n        }\r\n        state.setNewName('');\r\n        state.setNewNum('');\r\n      }\r\n      \r\n      return(\r\n        <form>\r\n            <div>\r\n            name: <input onBlur={getName} />\r\n            </div>\r\n            <div>\r\n            number: <input onBlur={getNum} />\r\n            </div>\r\n            <div>\r\n            <button type=\"submit\" onClick={addPerson}>add</button>\r\n            </div>\r\n        </form>\r\n      )    \r\n}\r\n\r\nexport default NewContact","import React from 'react'\r\nimport phonebook from '../services/phonebook'\r\n\r\nconst ContactList = ({state}) => {\r\n    const contacts = state.searchResults;\r\n    const del = function(contact){\r\n        let shouldDelete = window.confirm(`Delete ${contact.name}?`);\r\n        if(shouldDelete){ \r\n            phonebook.deleteContact(contact.id)\r\n            .then(()=>{\r\n                const newList = state.searchResults.filter(person => person.id !== contact.id);\r\n                state.setSearchResults(newList);\r\n                state.setNotification({error: false, message: 'contact deleted'})\r\n            })\r\n            .catch(() => {\r\n                state.setNotification({error: true, message:`${contact.name} not found`})\r\n            })\r\n         }\r\n        //.then(response => console.log(response))\r\n        //.catch(err => console.log(err))\r\n    }\r\n    return(\r\n        <div>\r\n            {contacts.length > 0 && \r\n                contacts.map(person => {\r\n                return <div key={person.id}>\r\n                        <span>{person.name} {person.number}</span>\r\n                        <span style={{marginLeft: '5px', color: 'red'}} onClick={()=>{del(person)}}>X</span>\r\n                    </div>\r\n                    }\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactList\r\n\r\n","import React, { useRef, useEffect } from 'react'\r\n\r\nconst Notification = ({ alert }) => {\r\n  const alertRef = useRef()\r\n\r\n  useEffect(()=>{\r\n    setTimeout(()=>{\r\n      alertRef.current.style.display = 'none'\r\n    },3000)\r\n  })\r\n\r\n  if (alert.error) {\r\n      return (\r\n        <div ref={alertRef} className=\"error-alert\">\r\n          {alert.message}\r\n        </div>\r\n      )\r\n    }\r\n  \r\n  return (\r\n      <div ref= {alertRef} className=\"success-alert\">\r\n        {alert.message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification;","import React, { useState, useEffect } from 'react'\nimport phonebook from './services/phonebook'\nimport FilterSearch from './components/filterSeacrch'\nimport NewContact from './components/newContact'\nimport ContactList from './components/contactList'\nimport Notification from './components/notification'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNum, setNewNum ] = useState('')\n  const [ searchResults, setSearchResults ] = useState([]);\n  const [ notification, setNotification ] = useState(false)\n\n  const stateObj = {persons, setPersons, newName, setNewName, newNum, setNewNum, searchResults, setSearchResults, setNotification}\n\n  useEffect(() => {\n    phonebook.getContacts()\n      .then(contacts => {\n        //console.log(response.data)\n          setPersons(contacts)\n      })\n  }, [searchResults])\n\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      { notification && <Notification alert={notification}/>}\n      <FilterSearch state={stateObj}/>\n      <h3>Add new contact</h3>\n      <NewContact state={stateObj}/>\n      <h2>Numbers</h2>\n      <ContactList state={stateObj}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css'\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}